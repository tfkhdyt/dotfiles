#!/usr/bin/env bash

# watch-yt - simple bash script to search and watch youtube video from terminal
#
# Dependencies:
# - yt-dlp
# - mpv
# - fzf
#
# Usage:
# - watch-yt URL
#   Example: watch-yt 'https://youtu.be/xxxxxxxxx'
#
# - watch-yt QUERY
#   Example: watch-yt 'learn rust lang'

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

set -euo pipefail

QUERY="$1"

if printf '%s\n' "$QUERY" | grep -Eq '^(https?://)?(www\.youtube\.com|youtu\.be)/.+$'; then
  VIDEO_URL="$QUERY"
else
  YOUTUBE_ID=$(yt-dlp ytsearch5:"$QUERY" --print 'channel' --print 'title' --print 'id' | while read line1; do read line2; read line3; echo -e "$line1~$line2~$line3"; done | column -t -s '~' | fzf | awk '{print $NF}')
  VIDEO_URL="https://youtu.be/$YOUTUBE_ID"
fi

VIDEO_ID=$(yt-dlp -F "$VIDEO_URL" | sed '/ID/,$!d' | grep -v 'mhtml' | grep -v 'audio only' | grep -vi 'avc1' | fzf --tac | awk '{print $1}')
AUDIO_ID="bestaudio"

echo "Video is loading, please wait..."

mpv --ytdl-format="${VIDEO_ID}+${AUDIO_ID}/best" --no-terminal $VIDEO_URL & disown
